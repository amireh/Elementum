/*
 * Copyright (C) Shroom Studios, Inc - All Rights Reserved
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 *
 * Written by Ahmad Amireh <ahmad@shroom-studios.com>, September 2011
 */

$#include "FxEngine.h"

namespace Ogre {
  class Vector3;
  class SceneManager;
  class SceneNode;
}

namespace Pixy {

  struct Event;
  class Entity;
  class GfxEngine;
	class FxEngine : public ParticleUniverse::ParticleSystemListener, public Pixy::Engine, public Pixy::EventListener {

	public:
		virtual ~FxEngine();
		static FxEngine& getSingleton();
    static FxEngine* getSingletonPtr();

		virtual bool setup();
		virtual void update(unsigned long lTimeElapsed);
		virtual bool cleanup();

    ParticleUniverse::ParticleSystem* loadEffect(std::string inName);
    ParticleUniverse::ParticleSystem* playEffect(std::string inEffect, Pixy::Entity* inEntity, bool newInstance = false);
    ParticleUniverse::ParticleSystem* playEffect(ParticleUniverse::ParticleSystem*, Pixy::Entity* inEntity);
    ParticleUniverse::ParticleSystem* playEffect(std::string inEffect, const Ogre::Vector3 pos, bool newInstance = false);

    void unloadAllEffects();

	};
}
