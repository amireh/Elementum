$#include "Renderable.h"

class Renderable
{
  public:
  enum AnimID
  {
    ANIM_NONE=0,
    ANIM_LIVE,
    ANIM_IDLE,
    ANIM_WALK,
    ANIM_RUN,
    ANIM_ATTACK,
    ANIM_HIT,
    ANIM_REST,
    ANIM_GETUP,
    ANIM_DIE
  };

  Renderable(Pixy::Entity* inOwner);
  virtual ~Renderable();

  Pixy::Entity* getEntity();

  virtual void attachSceneNode(Ogre::SceneNode* inNode);
  virtual Ogre::SceneNode* getSceneNode();
  virtual void attachSceneObject(Ogre::Entity* inObject);
  virtual Ogre::Entity* getSceneObject();

  void registerAnimationState(AnimID inId, std::string inState, bool doLoop = true);

  void setScale(float inScale);

  static void setAnimFadeSpeed(float inSpeed);
  static float getAnimFadeSpeed();

  static void setRotationFactor(float inFactor);

  float animateLive();
  float animateDie();
  float animateIdle();
  float animateWalk();
  float animateRun();
  float animateAttack();
  float animateHit();
  float animateRest();
  float animateGetUp();

  float _animate(AnimID inId);

  Ogre::Entity* attachExtension(std::string inMesh, std::string inBone);
  //void setOrientation(Ogre::Quaternion inQuat);
  //void resetOrientation();
};
