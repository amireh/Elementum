sampler s0 : register(s0);//scene
sampler s1 : register(s1);//lum
sampler s2 : register(s2);//key
sampler s3 : register(s3);//glare
sampler s4 : register(s4);//star

struct PS_IN
{
	float2 TexC : TEXCOORD0;
};

float4 PS(PS_IN i,uniform float GlareStrength,uniform float StarStrength) : COLOR
{
    float4 vSample = tex2D(s0, i.TexC);
    float avgLum = tex2D(s1, float2(0.5f, 0.5f));
    float Key = tex2D(s2, float2(0.5f, 0.5f));

    //Reinhard's Photographic Tone Reproduction Operator

    vSample.rgb *= Key/(avgLum + 0.001f);

    vSample.rgb = vSample.rgb / (vSample.rgb + 1) ;

    vSample.rgb += tex2D(s3,i.TexC) * GlareStrength;//glare
    vSample.rgb += tex2D(s4,i.TexC) * StarStrength;//star

    return vSample;
}
