sampler s0 : register(s0);

struct PS_IN
{
	float2 TexC : TEXCOORD0;
};

float4 PS(PS_IN i) : COLOR
{
    float fResampleSum = 0.0f; 
    
    // Compute the sum of luminance throughout the sample points
    fResampleSum += tex2D(s0, i.TexC + float2(-1.5/4.f,-1.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(-0.5/4.f,-1.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+0.5/4.f,-1.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+1.5/4.f,-1.5/4.f));

    fResampleSum += tex2D(s0, i.TexC + float2(-1.5/4.f,-0.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(-0.5/4.f,-0.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+0.5/4.f,-0.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+1.5/4.f,-0.5/4.f));

    fResampleSum += tex2D(s0, i.TexC + float2(-1.5/4.f,+0.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(-0.5/4.f,+0.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+0.5/4.f,+0.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+1.5/4.f,+0.5/4.f));

    fResampleSum += tex2D(s0, i.TexC + float2(-1.5/4.f,+1.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(-0.5/4.f,+1.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+0.5/4.f,+1.5/4.f));
    fResampleSum += tex2D(s0, i.TexC + float2(+1.5/4.f,+1.5/4.f));
        
    // Divide the sum to complete the average, and perform an exp() to complete
    // the average luminance calculation
    fResampleSum = exp(fResampleSum/16);

    return fResampleSum;
}